mgo_user: dradetsky.test.acct.other
mgo_domain: gmail.com
mgo_email: "{{ mgo_user }}@{{ mgo_domain }}"
mgo_fullname: "dmr"

mgo_base: "{{ ansible_user_dir }}/.mutt"
mgo_user_dir: "{{ mgo_base }}/{{ mgo_domain }}/{{ mgo_user }}"

mgo_rootrc: "{{ mgo_base }}/muttrc"
mgo_try_set_rootrc: yes
mgo_force_set_rootrc: no

mgo_local_folders: "{{ mgo_user_dir }}/stored-mail"
mgo_header_cache: "{{ mgo_user_dir }}/cache/headers"
mgo_message_cachedir: "{{ mgo_user_dir }}/cache/bodies"

mgo_alias_file: "{{ mgo_user_dir }}/aliases"

mgo_colors_file: colors-neonwolf
mgo_custom_rc_file: blank-custom-rc
mgo_mailboxes:
  - "+INBOX"
  - "+[Gmail].Sent Mail"
  - "+[Gmail].Starred"
  - "+[Gmail].Drafts"

mgo_mailboxes_str: "{{ mgo_mailboxes | map('quote') | join(' ') }}"

mgo_offlineimap_root: "{{ ansible_user_dir }}/.config/offlineimap"
mgo_offlineimap_base: "{{ mgo_offlineimap_root }}/conf.d"
mgo_offlineimap_conf: "{{ mgo_offlineimap_base }}/{{ mgo_email }}.conf"

mgo_systemd_user_dir: "{{ ansible_user_dir }}/.config/systemd/user"
mgo_systemd_unit_name: "offlineimap-{{ mgo_user }}-{{ mgo_domain }}.service"
mgo_systemd_unit_path: "{{ mgo_systemd_user_dir }}/{{ mgo_systemd_unit_name }}"
mgo_systemd_start_enable: yes
mgo_systemd_start_enable_force: no

mgo_pythonfile: "{{ mgo_offlineimap_root }}/pythonfile.py"

# in case this is difft on macs or something
mgo_sslcacertfile: /etc/ssl/certs/ca-certificates.crt

mgo_oauth_token_file: "{{ mgo_user_dir }}/token"

# maybe putting this with mutt is bad, idk
mgo_msmtp_base_dir: "{{ mgo_user_dir }}"
mgo_msmtp_cfg: "{{ mgo_msmtp_base_dir }}/msmtprc"
mgo_msmtp_token_script: smtp-token-handler.sh
mgo_msmtp_script_path: "{{ mgo_user_dir }}/{{ mgo_msmtp_token_script }}"

mgo_oauth_refresh_script_path: "{{ mgo_user_dir }}/google-oauth2-script.py"

# Shamelessly stolen from Mozilla Thunderbird
#
# In theory you could create your own id/secret pair via the Google cloud
# developer console, and then (IIRC) manually whitelist a set of accounts that
# are allowed to use your "app" while it's still "in development", or get Google
# to approve your "app" which in fact consists of two separate programs,
# offlineimap & msmtp (unless we change this later). Maybe they'll want you to
# have two separate id/secret pairs (and thus two sets of tokens) for this
# reason.
#
# But I mean, why would you bother with all this? Using the id/secret pair for
# Thunderbird (a mail-reading app) to read your mail works fine.
#
# For those unfamiliar with OAuth, the client secret does not actually have to
# be "secret" in the sense of not being committed to your publicly-visible repo.
# The way I got the id/secret for Thunderbird is that they're committed to
# Mozilla's publicly-visible repo.
mgo_oauth_client_id: 406964657835-aq8lmia8j95dhl1a2bvharmfk3t1hgqj.apps.googleusercontent.com
mgo_oauth_client_secret: kSmqreRr0qwBWJgbf5Y-PjSU
